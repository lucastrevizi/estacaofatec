#include "DHT.h"
#include <Wire.h>
#include <Adafruit_BMP085.h>
Adafruit_BMP085 bmp180;

int uv_out = A0;
int ref_3v3 = A1;
int tensao;

#define dhtPin 2
#define dhtType DHT22
#define pulsoPluv 3
#define anemometro 1

unsigned int counter = 0;
unsigned int counter2 = 0;
unsigned int pluv = 0;
unsigned int RpmAnem = 0;
boolean flagSend = false;
boolean ultimoestado = false;

DHT dht(dhtPin, dhtType);

void setup() {
   TCCR1A = 0x00;                                // 
   TCCR1B = B00000110;                           // Configuração do TIMER 1 para contador com clock externo
   TCNT1 = 0;
   TCCR2A = 0x00;                                // Configura interrupção do timer 2 para cada 8ms, para calculo da RPM x 100
   TCCR2B = B00000111;                           // Indica a função que irá ser executada quando interromper
   TIMSK2 |= (1 << OCIE2A);
   TCNT2 = 131;
   sei();
   pinMode(pulsoPluv, INPUT);
   pinMode(anemometro, INPUT);
   Serial.begin(9600);
   pinMode(uv_out, INPUT);
   pinMode(ref_3v3, INPUT);
   if (!bmp180.begin()) 
    {
      Serial.println("Sensor nao encontrado !!");
      while (1) {}
    }
}

ISR(TIMER2_COMPA_vect){
  counter++;
  counter2++;
  if(counter == 125){
    RpmAnem = TCNT1;
    counter = 0;
    TCNT1 = 0;
  }
  if(counter2 == 250){
    flagSend = true;
    counter2 = 0;
  }
  TCNT2 = 131;
}

int averageAnalogRead(int pinToRead)
{
  byte numberOfReadings = 8;
  unsigned int runningValue = 0; 

  for(int x = 0 ; x < numberOfReadings ; x++)
    runningValue += analogRead(pinToRead);
  runningValue /= numberOfReadings;

  return(runningValue);  
}

float mapfloat(float x, float in_min, float in_max, float out_min, float out_max)
{
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}

void loop() {
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  int uvLevel = averageAnalogRead(uv_out);
  int refLevel = averageAnalogRead(ref_3v3);
  float outputVoltage = 3.3 / refLevel * uvLevel;
  float uvIntensity = mapfloat(outputVoltage, 0.99, 2.8, 0.0, 15.0);

  if(isnan(h) || isnan(t)){
    Serial.println("Erro DHT");
    return;
  }

  if((digitalRead(pulsoPluv)) && (!ultimoestado)){
    ultimoestado = true;
    pluv++;
  }

  if(!digitalRead(pulsoPluv)){
    ultimoestado = false;
  }

  if(flagSend){
  Serial.print("Umidade: ");
  Serial.println(h);
  Serial.print("Temperatura: ");
  Serial.println(t);
  Serial.print("Indice Pluviometrico: ");
  Serial.print(pluv*0.25);
  Serial.println("mm");
  Serial.print("Anemometro: ");
  Serial.println(RpmAnem);
  Serial.print("Altitude : ");
  Serial.print(bmp180.readAltitude());
  Serial.println(" m");
  Serial.print("Pressao : ");
  Serial.print(bmp180.readPressure());  
  Serial.println(" Pa"); 
  Serial.print("UV_INdex : ");
  Serial.println(uvIntensity);
  Serial.println("--------");
  RpmAnem = 0;
  flagSend = false;
  }
}
